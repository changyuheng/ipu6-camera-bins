/**
* INTEL CONFIDENTIAL
*
* Copyright (C) 2017 - 2019 Intel Corporation.
* All Rights Reserved.
*
* The source code contained or described herein and all documents
* related to the source code ("Material") are owned by Intel Corporation
* or licensors. Title to the Material remains with Intel
* Corporation or its licensors. The Material contains trade
* secrets and proprietary and confidential information of Intel or its
* licensors. The Material is protected by worldwide copyright
* and trade secret laws and treaty provisions. No part of the Material may
* be used, copied, reproduced, modified, published, uploaded, posted,
* transmitted, distributed, or disclosed in any way without Intel's prior
* express written permission.
*
* No License under any patent, copyright, trade secret or other intellectual
* property right is granted to or conferred upon you by disclosure or
* delivery of the Materials, either expressly, by implication, inducement,
* estoppel or otherwise. Any license under such intellectual property rights
* must be express and approved by Intel in writing.
*/

#ifndef __IPU_DEVICE_BUTTRESS_PROPERTIES_STRUCT_H
#define __IPU_DEVICE_BUTTRESS_PROPERTIES_STRUCT_H

#include "storage_class.h"
#include "type_support.h"

enum ipu_device_buttress_registers {
	IPU_DEVICE_BUTTRESS_BTRS_CTL			= 0x00C,
	IPU_DEVICE_BUTTRESS_IS_WORKPOINT_REQ		= 0x034,
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_REQ		= 0x038,
	IPU_DEVICE_BUTTRESS_PWR_STATUS				= 0x05c,
	IPU_DEVICE_BUTTRESS_FABRIC_CTL			= 0x068,
	IPU_DEVICE_BUTTRESS_FABRIC_CMD			= 0x088,
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_REQ	= 0x0A0,
	IPU_DEVICE_BUTTRESS_PS_DOMAINS_STATUS		= 0x0A4,
	IPU_DEVICE_BUTTRESS_IS_POWER_ACK_B_STATUS	= 0x0A8,
	IPU_DEVICE_BUTTRESS_PS_POWER_ACK_B_STATUS	= 0x0AC,
	IPU_DEVICE_BUTTRESS_PS_PWR_DOMAIN_EVENTQ_EN	= 0x0C0,
	IPU_DEVICE_BUTTRESS_PS_PWR_DOMAIN_EVENTQ_ADDR	= 0x0C4,
	IPU_DEVICE_BUTTRESS_PS_PWR_DOMAIN_EVENTQ_DATA	= 0x0C8,
	IPU_DEVICE_BUTTRESS_FW_SOURCE_BASE		= 0x078,
	IPU_DEVICE_BUTTRESS_FW_BASE			= 0x134,
	IPU_DEVICE_BUTTRESS_FW_SCRATCH_BASE		= 0x13C,
	IPU_DEVICE_BUTTRESS_FW2CSE_MAILBOX		= 0x15C,	/*used also for boot debug of PSYS */
	IPU_DEVICE_BUTTRESS_CSE2FW_MAILBOX		= 0x160,	/*used also for boot debug of ISYS */
	IPU_DEVICE_BUTTRESS_TSC_LOW			= 0x164,
	IPU_DEVICE_BUTTRESS_TSC_HIGH			= 0x168,
	IPU_DEVICE_BUTTRESS_IS_SP_SC_STATUS_ACCESS	= 0x174,
	IPU_DEVICE_BUTTRESS_IS_SP_SC_START_ADDR		= 0x178,
	IPU_DEVICE_BUTTRESS_IS_SP_SC_ICACHE_BASE_ADDR	= 0x180,
	IPU_DEVICE_BUTTRESS_PS_SP_SC_STATUS_ACCESS	= 0x184,
	IPU_DEVICE_BUTTRESS_PS_SP_SC_START_ADDR		= 0x188,
	IPU_DEVICE_BUTTRESS_PS_SP_SC_ICACHE_BASE_ADDR	= 0x18C,
	IPU_DEVICE_BUTTRESS_SECURITY_CTL		= 0x300,
	IPU_DEVICE_BUTTRESS_SECURE_TOUCH		= 0x318,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_HPTR_SET0		= 0x2000,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_HPTR_SET1		= 0x2004,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_HPTR_SET2		= 0x2008,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_HPTR_SET3		= 0x200C,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_SYNC_SET0		= 0x2010,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_SYNC_SET1		= 0x2014,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_SYNC_SET2		= 0x2018,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_SYNC_SET3		= 0x201C,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_TPTR_SET0		= 0x2020,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_TPTR_SET1		= 0x2024,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_TPTR_SET2		= 0x2028,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_TPTR_SET3		= 0x202C,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_SYNC_ADDR_SET0		= 0x2030,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_SYNC_ADDR_SET1		= 0x2034,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_SYNC_ADDR_SET2		= 0x2038,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_SYNC_ADDR_SET3		= 0x203C,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_TPTR_ADDR_SET0		= 0x2040,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_TPTR_ADDR_SET1		= 0x2044,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_TPTR_ADDR_SET2		= 0x2048,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_CONSUMER_TPTR_ADDR_SET3		= 0x204C,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_PRODUCER_HPTR_ADDR_SET0		= 0x2050,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_PRODUCER_HPTR_ADDR_SET1		= 0x2054,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_PRODUCER_HPTR_ADDR_SET2		= 0x2058,
	IPU_DEVICE_BUTTRESS_STREAM2GEN_PRODUCER_HPTR_ADDR_SET3		= 0x205C,

	IPU_DEVICE_BUTTRESS_STREAM2GEN_STR_IFC_CFG		= 0x2060,

	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_0		= 0x4000,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_1		= 0x4004,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_2		= 0x4008,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_3		= 0x400C,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_4		= 0x4010,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_5		= 0x4014,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_6		= 0x4018,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_7		= 0x401C,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_8		= 0x4020,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_9		= 0x4024,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_10		= 0x4028,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_11		= 0x402C,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_12		= 0x4030,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_13		= 0x4034,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_14		= 0x4038,
	IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_15		= 0x403C
};

/* Destination values for master port 0 and bitfield "request_dest" */
enum cio_M0_btrs_dest {
	DEST_IS_BUT_REGS = 0,
	DEST_IS_DDR,
	N_BTRS_DEST
};

/* Destination values for master port 0 and bitfield "IMR base address" */
enum cio_M0_imr_base {
	IMR_BASE_1 = 0,
	IMR_BASE_2,
	N_IMR_BASE
};

/* Bit-field positions for M0/M1 info bits */
enum ia_css_info_bits_pos {
	IA_CSS_INFO_BITS_SNOOPABLE_POS		= 0,
	IA_CSS_INFO_BITS_PASSTHROUGH_POS	= 2,
	IA_CSS_INFO_BITS_STREAM_ID_POS		= 4,
	IA_CSS_INFO_BITS_REQUEST_DEST_POS	= 9,
	IA_CSS_INFO_BITS_IMR_BASE_ADDRESS	= 10,
	IA_CSS_INFO_BITS_IMR_DESTINED_POS	= 11
};

#define IA_CSS_INFO_BITS_M0_DDR \
	(DEST_IS_DDR << IA_CSS_INFO_BITS_REQUEST_DEST_POS)
#define IA_CSS_INFO_BITS_M0_PASSTHROUGH \
	(1 << IA_CSS_INFO_BITS_PASSTHROUGH_POS)
#define IA_CSS_INFO_BITS_M0_SNOOPABLE \
	(1 << IA_CSS_INFO_BITS_SNOOPABLE_POS)
#define IA_CSS_INFO_BITS_M0_IMR_DESTINATION \
	(1 << IA_CSS_INFO_BITS_IMR_DESTINED_POS)
#define IA_CSS_INFO_BITS_STREAM_ID_MASK \
	((0x1F) << IA_CSS_INFO_BITS_STREAM_ID_POS)
#define IA_CSS_INFO_BITS_STREAM_ID_RESET \
	(~(IA_CSS_INFO_BITS_STREAM_ID_MASK))

#define IA_CSS_INFO_BITS_M1_DO_COMPRESSION  (IA_CSS_INFO_BITS_M0_PASSTHROUGH)
#define IA_CSS_INFO_BITS_M1_PASSTHROUGH      (~(IA_CSS_INFO_BITS_M1_DO_COMPRESSION))

#define IA_CSS_INFO_BITS_BUTTRESS_CONFIG_DEST_DDR (IA_CSS_INFO_BITS_M0_DDR)
#define IA_CSS_INFO_BITS_BUTTRESS_CONFIG_DEST_IMR \
	(IA_CSS_INFO_BITS_M0_IMR_DESTINATION + IA_CSS_INFO_BITS_M0_DDR)
#define IA_CSS_INFO_BITS_BUTTRESS_CONFIG_DEST_DDR_SNOOP \
	(IA_CSS_INFO_BITS_BUTTRESS_CONFIG_DEST_DDR + IA_CSS_INFO_BITS_M0_SNOOPABLE)
#define IA_CSS_INFO_BITS_BUTTRESS_CONFIG_DEST_IMR_SNOOP \
	(IA_CSS_INFO_BITS_BUTTRESS_CONFIG_DEST_IMR + IA_CSS_INFO_BITS_M0_SNOOPABLE)

STORAGE_CLASS_INLINE
void ipu_device_buttress_update_compression_info_bits(bool compression_enabled, uint32_t *cio_info_bits)
{
	if (compression_enabled) {
		*cio_info_bits |= IA_CSS_INFO_BITS_M1_DO_COMPRESSION;
	} else {
		*cio_info_bits &= IA_CSS_INFO_BITS_M1_PASSTHROUGH;
	}
}

STORAGE_CLASS_INLINE
void ipu_device_buttress_update_stream_id_info_bits(uint32_t *cio_info_bits, uint32_t stream_id)
{
	*cio_info_bits &= IA_CSS_INFO_BITS_STREAM_ID_RESET; /* clear stream id field */
	*cio_info_bits |= (IA_CSS_INFO_BITS_STREAM_ID_MASK & (stream_id << IA_CSS_INFO_BITS_STREAM_ID_POS));
}

#define IA_CSS_REF_CLK_BITS	2
#define IA_CSS_REF_CLK_OFFSET	8
#define IA_CSS_REF_CLK_MASK	(((1 << IA_CSS_REF_CLK_BITS) -1) << IA_CSS_REF_CLK_OFFSET)

/* Bit values of the ref_clk field in BTRS_CTL */
enum ref_clk_idx {
	REF_CLK_24_MHZ = 0,
	REF_CLK_19_2_MHZ,
	REF_CLK_38_4_MHZ,
	REF_CLK_RSVD,
	N_REF_CLK
};

/* Frequency values of the ref_clk field in BTRS_CTL
 * Unit is in 200kHz, to prevent overflow in calculation
 */
#define IA_CSS_REF_CLK_UNIT             200000
#define IA_CSS_REF_CLK_24_MHZ           24000000
#define IA_CSS_REF_CLK_24_UNITS         (IA_CSS_REF_CLK_24_MHZ/IA_CSS_REF_CLK_UNIT)
#define IA_CSS_REF_CLK_19_2_MHZ         19200000
#define IA_CSS_REF_CLK_19_2_UNITS       (IA_CSS_REF_CLK_19_2_MHZ/IA_CSS_REF_CLK_UNIT)
#define IA_CSS_REF_CLK_38_4_MHZ         38400000
#define IA_CSS_REF_CLK_38_4_UNITS       (IA_CSS_REF_CLK_38_4_MHZ/IA_CSS_REF_CLK_UNIT)

enum ref_clk_val {
	REF_CLK_VAL_24_MHZ   = IA_CSS_REF_CLK_24_UNITS,   /* 24 MHz */
	REF_CLK_VAL_19_2_MHZ = IA_CSS_REF_CLK_19_2_UNITS, /* 19.2 MHz */
	REF_CLK_VAL_38_4_MHZ = IA_CSS_REF_CLK_38_4_UNITS, /* 38.4 MHz */
	REF_CLK_VAL_RSVD = 0
};

/* Info bits as expected by the buttress */
/* Deprecated because bit fields are not portable */

struct cio_bitfields_t {
	unsigned int snoopable		: 1;
	unsigned int flush		: 1;
	unsigned int passthrough	: 1;
	unsigned int zlw		: 1;
	unsigned int stream_id		: 5;
	unsigned int request_dest	: 1;
	unsigned int imr_base_addr	: 1;
	unsigned int imr_destined	: 1;
	unsigned int spare0		: 20;
};

/* For master port 0*/
union cio_M0_t {
	struct cio_bitfields_t as_bitfield;
	unsigned int as_word;
};

/* For master port 1*/
union cio_M1_t {
	struct cio_bitfields_t as_bitfield;
	unsigned int as_word;
};

/* Bit-field positions for PS sub-domain state bits */
enum ipu_device_buttress_ps_workpoint_domain_pos {
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_ISA_POS		= 0,
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_PSA_POS		= 1,
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_BB_POS		= 2,
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_IDSP1_POS	= 3,	/* only in IPU6M */
	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_IDSP2_POS	= 4	/* only in IPU6M */
};

#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_ISA	(1<<IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_ISA_POS)
#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_PSA	(1<<IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_PSA_POS)
#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_BB	(1<<IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_BB_POS)
#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_ISA_PSA_BB	(IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_ISA | \
								IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_PSA | \
								IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_BB)
#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_MASK	IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_ISA_PSA_BB

#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_IDSP1	(1<<IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_IDSP1_POS)
#define IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_IDSP2	(1<<IPU_DEVICE_BUTTRESS_PS_WORKPOINT_DOMAIN_IDSP2_POS)

/* Bit-field positions for PS domain status bits */
enum ipu_device_buttress_ps_domain_status_pos {
	IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_ISA_POS		= 0,
	IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_PSA_POS		= 1,
	IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_BB_POS		= 2,
	IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IDSP1_POS		= 3,	/* only in IPU6M */
	IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IDSP2_POS		= 4,	/* only in IPU6M */
	IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IN_PROGRESS_POS	= 31
};

#define IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_ISA		(1<<IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_ISA_POS)
#define IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_PSA		(1<<IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_PSA_POS)
#define IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_BB			(1<<IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_BB_POS)
#define IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IDSP1		(1<<IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IDSP1_POS)
#define IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IDSP2		(1<<IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IDSP2_POS)
#define IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IN_PROGRESS	(1<<IPU_DEVICE_BUTTRESS_PS_DOMAIN_STATUS_IN_PROGRESS_POS)

#define reg_IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_ENTRY(n)		(IPU_DEVICE_BUTTRESS_FW_BOOT_PARAMS_0+((n)*4))

#endif /* __IPU_DEVICE_BUTTRESS_PROPERTIES_STRUCT_H */
