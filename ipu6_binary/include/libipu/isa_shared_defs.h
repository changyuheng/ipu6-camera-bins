/*
 * INTEL CONFIDENTIAL
 *
 * Copyright (C) 2017 - 2021 Intel Corporation.
 * All Rights Reserved.
 *
 * The source code contained or described herein and all documents
 * related to the source code ("Material") are owned by Intel Corporation
 * or licensors. Title to the Material remains with Intel
 * Corporation or its licensors. The Material contains trade
 * secrets and proprietary and confidential information of Intel or its
 * licensors. The Material is protected by worldwide copyright
 * and trade secret laws and treaty provisions. No part of the Material may
 * be used, copied, reproduced, modified, published, uploaded, posted,
 * transmitted, distributed, or disclosed in any way without Intel's prior
 * express written permission.
 *
 * No License under any patent, copyright, trade secret or other intellectual
 * property right is granted to or conferred upon you by disclosure or
 * delivery of the Materials, either expressly, by implication, inducement,
 * estoppel or otherwise. Any license under such intellectual property rights
 * must be express and approved by Intel in writing.
 */

#ifndef __ISA_SHARED_DEFS_H
#define __ISA_SHARED_DEFS_H

#include "isa_shared_defs_dep.h"


#define S2V_VECTOR_SIZE		(32)
#define BYTES_PER_PIXEL		(2)
#define IPFD_BLOCK_WIDTH	(CEIL_DIV(INPUT_BLOCK_WIDTH, S2V_VECTOR_SIZE))
#define IPFD_BLOCK_HEIGHT	(2)
#define IPFD_BUFSIZE		(IPFD_BLOCK_WIDTH * IPFD_BLOCK_HEIGHT)
#define IPFD_NUMBUF		(3)
#define INPUT_QUEUE_SIZE	(IPFD_BUFSIZE * S2V_VECTOR_SIZE)

/* resources offset */
#define	VIED_NCI_LB_VMEM_TYPE_OFFSET                    0

/* PAF */
#define INPUT_PAF_BLOCK_WIDTH	(512) /* TODO: Use LKF PAF Size. Check with HAS */
#define IPFD_PAF_BLOCK_WIDTH	(CEIL_DIV(INPUT_PAF_BLOCK_WIDTH, S2V_VECTOR_SIZE))
#define IPFD_PAF_BLOCK_HEIGHT	(2)
#define IPFD_PAF_BUFSIZE	(IPFD_PAF_BLOCK_WIDTH * IPFD_PAF_BLOCK_HEIGHT)
#define INPUT_PAF_QUEUE_SIZE	(IPFD_PAF_BUFSIZE * S2V_VECTOR_SIZE)
#define IPFD_PAF_BUF_MEM_OFFSET		((VIED_NCI_LB_VMEM_TYPE_OFFSET + (IPFD_BUFSIZE * IPFD_NUMBUF))  \
						 * VECTOR_SIZE_IN_BYTES)

#define CHROMA_SUBSAMPLE_SHIFT		(1)
#define NUM_LINES_INTERLEAVED		(2)

#define IPFD_BAYER_ISL_NUM_DMA_CHANNELS		(1)
#define DFM_LSC_DMA_SPATIAL_NUM_DMA_CHANNELS	(1)
#define LSC_DMA_SIZE				DFM_LSC_DMA_SPATIAL_NUM_DMA_CHANNELS
#define DMA_BAYER_IN_SIZE			DMA_ONE_CHANNEL
#define DMA_PAF_IN_SIZE				DMA_ONE_CHANNEL
#define DMA_ISLDMA_SIZE				DMA_ONE_CHANNEL

#define DMA_OUT_STILL_ORIG_RES_VEC_DMA_NOF_CHANS	DMA_ONE_CHANNEL
#define DMA_OUT_STILL_ORIG_RES_NOF_CHANS_PER_PLANE	DMA_ONE_CHANNEL
#define DMA_OUT_STILL_ORIG_RES_NUM_PLANES		(4)
#define DMA_OUT_STILL_ORIG_RES_SIZE			(DMA_OUT_STILL_ORIG_RES_NUM_PLANES * DMA_OUT_STILL_ORIG_RES_NOF_CHANS_PER_PLANE)

#define DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE	DMA_ONE_CHANNEL
#define DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS		(YUV_PLANAR_FRAME_TYPE_NUM_PLANES * DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_SCALED_DMA_NOF_CHANS			DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS

#define AF_DMA_SIZE	(2)
#define AWB_DMA_SIZE	(2)
#define PAF_DMA_SIZE	(1)

/*
 * TODO: update once the duplicate, mismatching ISP resource model has been eliminated
 */
#define DMA_OUT_SCALED_DMA_ID_API_MODEL		VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID
#define DMA_OUT_SCALED_DMA_ID_ISP_MODEL		vied_nci_dev_chn_dma_ext1_write
#define DMA_OUT_STILL_ORIG_RES_DMA_ID_API_MODEL	VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID
#define DMA_OUT_STILL_ORIG_RES_DMA_ID_ISP_MODEL	vied_nci_dev_chn_dma_ext1_write

#define DMA_NCI_BAYER_INPUT_TRANSFER_DMA_RESOURCE_ID		vied_nci_dev_chn_dma_ext1_read
#define DMA_NCI_BAYER_INPUT_TRANSFER_NUM_LINES_INTERLEAVED	(1)
#define DMA_NCI_BAYER_ORIG_OUTPUT_NUM_LINES_INTERLEAVED		NUM_LINES_INTERLEAVED

#define DFM_DMA_BAYER_INPUT_NUM_LINES_INTERLEAVED		(1)
#define DFM_DMA_BAYER_OUTPUT_DMA_RESOURCE_ID			vied_nci_dev_chn_dma_ext1_write
#define DFM_DMA_BAYER_OUTPUT_NUM_LINES_INTERLEAVED		NUM_LINES_INTERLEAVED


#define YYUVYY_HOR_INTERLEAVE_FACTOR				(3)

/* Defines for output buffers - TRANSFER VMEM */
/* Bayer full resolution */
#define OUTPUT_BAYER_BLOCK_WIDTH		(2048 * BYTES_PER_ELEMENT / VECTOR_SIZE_IN_BYTES)
#define OUTPUT_BAYER_BLOCK_HEIGHT		(2)
#define OUTPUT_BAYER_BUFSIZE			(OUTPUT_BAYER_BLOCK_WIDTH * OUTPUT_BAYER_BLOCK_HEIGHT)
#define OUTPUT_STILL_ORIG_RES_BUF_MEM_SIZE	(OUTPUT_BAYER_BUFSIZE * OUTPUT_BAYER_NUMBUF * VECTOR_SIZE_IN_BYTES)

/* Video YUV Planar - same definitions as for Bayer full resolution */
#define VIDEO_FULL_Q_OUT_BLK_WIDTH	(2048 * BYTES_PER_ELEMENT / VECTOR_SIZE_IN_BYTES)
#define VIDEO_FULL_Q_OUT_BLK_HEIGHT	(2)
#define VIDEO_FULL_Q_OUT_WIDTH_Y	VIDEO_FULL_Q_OUT_BLK_WIDTH
#define VIDEO_FULL_Q_OUT_HEIGHT_Y	VIDEO_FULL_Q_OUT_BLK_HEIGHT
#define VIDEO_FULL_Q_OUT_SIZE_Y		(VIDEO_FULL_Q_OUT_WIDTH_Y * VIDEO_FULL_Q_OUT_HEIGHT_Y)
#define VIDEO_FULL_Q_OUT_WIDTH_U	(VIDEO_FULL_Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define VIDEO_FULL_Q_OUT_HEIGHT_U	(VIDEO_FULL_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define VIDEO_FULL_Q_OUT_SIZE_U		(VIDEO_FULL_Q_OUT_WIDTH_U * VIDEO_FULL_Q_OUT_HEIGHT_U)
#define VIDEO_FULL_Q_OUT_WIDTH_V	(VIDEO_FULL_Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define VIDEO_FULL_Q_OUT_HEIGHT_V	(VIDEO_FULL_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define VIDEO_FULL_Q_OUT_SIZE_V		(VIDEO_FULL_Q_OUT_WIDTH_V * VIDEO_FULL_Q_OUT_HEIGHT_V)
#define VIDEO_FULL_Q_OUT_SIZE		(VIDEO_FULL_Q_OUT_SIZE_Y + VIDEO_FULL_Q_OUT_SIZE_U + VIDEO_FULL_Q_OUT_SIZE_V)
#define VIDEO_FULL_Q_OUT_MEM_SIZE	(VIDEO_FULL_Q_OUT_SIZE * VIDEO_FULL_Q_OUT_NUMBUF * VECTOR_SIZE_IN_BYTES)

/* Scaled A YUV Planar */
#define SCALED_A_Q_OUT_NUMBUF		(3)
#define SCALED_A_Q_OUT_BLK_WIDTH	(2048 * BYTES_PER_ELEMENT / VECTOR_SIZE_IN_BYTES)
#define SCALED_A_Q_OUT_BLK_HEIGHT	(2)
#define SCALED_A_Q_OUT_WIDTH_Y		SCALED_A_Q_OUT_BLK_WIDTH
#define SCALED_A_Q_OUT_HEIGHT_Y		SCALED_A_Q_OUT_BLK_HEIGHT
#define SCALED_A_Q_OUT_SIZE_Y		(SCALED_A_Q_OUT_WIDTH_Y * SCALED_A_Q_OUT_HEIGHT_Y)
#define SCALED_A_Q_OUT_WIDTH_U		(SCALED_A_Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_A_Q_OUT_HEIGHT_U		(SCALED_A_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_A_Q_OUT_SIZE_U		(SCALED_A_Q_OUT_WIDTH_U * SCALED_A_Q_OUT_HEIGHT_U)
#define SCALED_A_Q_OUT_WIDTH_V		(SCALED_A_Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_A_Q_OUT_HEIGHT_V		(SCALED_A_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_A_Q_OUT_SIZE_V		(SCALED_A_Q_OUT_WIDTH_V * SCALED_A_Q_OUT_HEIGHT_V)
#define SCALED_A_Q_OUT_SIZE		(SCALED_A_Q_OUT_SIZE_Y + SCALED_A_Q_OUT_SIZE_U + SCALED_A_Q_OUT_SIZE_V)
#define SCALED_A_Q_OUT_MEM_SIZE		(SCALED_A_Q_OUT_SIZE * SCALED_A_Q_OUT_NUMBUF * VECTOR_SIZE_IN_BYTES)

#define SCALED_A_Q_ISA2PSA_NUMBUF	(3)
#define SCALED_A_Q_ISA2PSA_VECTORS_IN_BUFFER (336) /* 336 is 1/3 of lb vmem space */

/* Scaled B YUV Planar */
#define SCALED_B_Q_OUT_NUMBUF		(3)
#define SCALED_B_Q_OUT_BLK_WIDTH	(1024 * BYTES_PER_ELEMENT / VECTOR_SIZE_IN_BYTES)
#define SCALED_B_Q_OUT_BLK_HEIGHT	(2)
#define SCALED_B_Q_OUT_WIDTH_Y		SCALED_B_Q_OUT_BLK_WIDTH
#define SCALED_B_Q_OUT_HEIGHT_Y		SCALED_B_Q_OUT_BLK_HEIGHT
#define SCALED_B_Q_OUT_SIZE_Y		(SCALED_B_Q_OUT_WIDTH_Y * SCALED_B_Q_OUT_HEIGHT_Y)
#define SCALED_B_Q_OUT_WIDTH_U		(SCALED_B_Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_B_Q_OUT_HEIGHT_U		(SCALED_B_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_B_Q_OUT_SIZE_U		(SCALED_B_Q_OUT_WIDTH_U * SCALED_B_Q_OUT_HEIGHT_U)
#define SCALED_B_Q_OUT_WIDTH_V		(SCALED_B_Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_B_Q_OUT_HEIGHT_V		(SCALED_B_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_B_Q_OUT_SIZE_V		(SCALED_B_Q_OUT_WIDTH_V * SCALED_B_Q_OUT_HEIGHT_V)
#define SCALED_B_Q_OUT_SIZE		(SCALED_B_Q_OUT_SIZE_Y + SCALED_B_Q_OUT_SIZE_U + SCALED_B_Q_OUT_SIZE_V)
#define SCALED_B_Q_OUT_MEM_SIZE		(SCALED_B_Q_OUT_SIZE * SCALED_B_Q_OUT_NUMBUF * VECTOR_SIZE_IN_BYTES)

/* For NV12 output */
#define SCALED_A_Q_OUT_WIDTH_UV		SCALED_A_Q_OUT_WIDTH_U
#define SCALED_A_Q_OUT_HEIGHT_UV	(SCALED_A_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_A_Q_OUT_SIZE_UV		(SCALED_A_Q_OUT_WIDTH_UV * SCALED_A_Q_OUT_HEIGHT_UV)

#define SCALED_B_Q_OUT_WIDTH_UV		SCALED_B_Q_OUT_WIDTH_U
#define SCALED_B_Q_OUT_HEIGHT_UV	(SCALED_B_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define SCALED_B_Q_OUT_SIZE_UV		(SCALED_B_Q_OUT_WIDTH_UV * SCALED_B_Q_OUT_HEIGHT_UV)

#define VIDEO_FULL_Q_OUT_WIDTH_UV	VIDEO_FULL_Q_OUT_WIDTH_U
#define VIDEO_FULL_Q_OUT_HEIGHT_UV	(VIDEO_FULL_Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define VIDEO_FULL_Q_OUT_SIZE_UV	(VIDEO_FULL_Q_OUT_WIDTH_UV * VIDEO_FULL_Q_OUT_HEIGHT_UV)

#define DFM_ISL_IN_PROD_NUM_CONFIG	(2) /* For online and buffer chasing/offline [same config] */
#define DFM_ISL_IN_CONS_NUM_CONFIG	(2) /* For online and buffer chasing/offline [same config] */

#endif /* __ISA_SHRED_DEFS_H */
