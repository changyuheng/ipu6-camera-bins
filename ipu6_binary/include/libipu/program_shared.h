/*
 * INTEL CONFIDENTIAL
 *
 * Copyright (C) 2017 - 2020 Intel Corporation.
 * All Rights Reserved.
 *
 * The source code contained or described herein and all documents
 * related to the source code ("Material") are owned by Intel Corporation
 * or licensors. Title to the Material remains with Intel
 * Corporation or its licensors. The Material contains trade
 * secrets and proprietary and confidential information of Intel or its
 * licensors. The Material is protected by worldwide copyright
 * and trade secret laws and treaty provisions. No part of the Material may
 * be used, copied, reproduced, modified, published, uploaded, posted,
 * transmitted, distributed, or disclosed in any way without Intel's prior
 * express written permission.
 *
 * No License under any patent, copyright, trade secret or other intellectual
 * property right is granted to or conferred upon you by disclosure or
 * delivery of the Materials, either expressly, by implication, inducement,
 * estoppel or otherwise. Any license under such intellectual property rights
 * must be express and approved by Intel in writing.
 */

#ifndef __PROGRAM_SHARED_H
#define __PROGRAM_SHARED_H

#include "math_support.h"
#include "ia_css_vmem_resources.h"
#include "isa_shared_defs.h"
#include "psa_shared_defs.h"
#include "ia_css_dma_resources.h"

/* IPU6_HAS_LineBased_PS.docx - 1.3 LB_PS accelerators line-buffers size and max supported image size
 * With ISA_LB, the ISA YUV_A and BAYER_A outputs go to LB_PS.  As a result, these are limited
 * to the LB_PS HW limits.  The other ISA outputs go to DDR and are not affected.
 */
#define GET_LB_MIN_WIDTH									(64)
#define GET_LB_MIN_HEIGHT									(24)
#define GET_LB_MAX_WIDTH									(4608)
#define GET_LB_MAX_HEIGHT									(8192)

/* TERMINALS */
#define PUT_MIN_WIDTH										(GET_LB_MIN_WIDTH)
#define PUT_MIN_HEIGHT										(GET_LB_MIN_HEIGHT)
#define PUT_MAX_WIDTH										(GET_LB_MAX_WIDTH)
#define PUT_MAX_HEIGHT										(GET_LB_MAX_HEIGHT)

#define PUT_SIS_A_MIN_WIDTH									(GET_MIN_WIDTH)
#define PUT_SIS_A_MIN_HEIGHT									(GET_MIN_HEIGHT)
#define PUT_SIS_A_MAX_WIDTH									(GET_MAX_WIDTH)
#define PUT_SIS_A_MAX_HEIGHT									(GET_MAX_HEIGHT)

#define PUT_SIS_B_MIN_WIDTH									(PUT_SIS_A_MIN_WIDTH)
#define PUT_SIS_B_MIN_HEIGHT									(PUT_SIS_A_MIN_HEIGHT)
#define PUT_SIS_B_MAX_WIDTH									(PUT_SIS_A_MAX_WIDTH)
#define PUT_SIS_B_MAX_HEIGHT									(PUT_SIS_A_MAX_HEIGHT)

#define PUT_YUV_A_MIN_WIDTH									(PUT_MIN_WIDTH)
#define PUT_YUV_A_MIN_HEIGHT									(PUT_MIN_HEIGHT)
#define PUT_YUV_A_MAX_WIDTH									(PUT_MAX_WIDTH)
#define PUT_YUV_A_MAX_HEIGHT									(PUT_MAX_HEIGHT)

#if HAS_FF_R2I_DS_B
#define PUT_YUV_B_MIN_WIDTH									(GET_MIN_WIDTH)
#define PUT_YUV_B_MIN_HEIGHT									(GET_MIN_HEIGHT)
#define PUT_YUV_B_MAX_WIDTH									(GET_MAX_WIDTH)
#define PUT_YUV_B_MAX_HEIGHT									(GET_MAX_HEIGHT)
#endif

#define PUT_VIDEO_FULL_MIN_WIDTH								(GET_MIN_WIDTH)
#define PUT_VIDEO_FULL_MIN_HEIGHT								(GET_MIN_HEIGHT)
#define PUT_VIDEO_FULL_MAX_WIDTH								(GET_MAX_WIDTH)
#define PUT_VIDEO_FULL_MAX_HEIGHT								(GET_MAX_HEIGHT)

#define PUT_IR_DEPTH_MIN_WIDTH									(GET_MIN_WIDTH)
#define PUT_IR_DEPTH_MIN_HEIGHT									(GET_MIN_HEIGHT)
#define PUT_IR_DEPTH_MAX_WIDTH									(GET_MAX_WIDTH)
#define PUT_IR_DEPTH_MAX_HEIGHT									(GET_MAX_HEIGHT)

/* DMA resources offsets */

#define VIED_NCI_ISL_VMEM_TYPE_OFFSET							(0)
#define VIED_NCI_DEV_CHN_DMA_ISA_OFFSET							(0)
#if HAS_FF_DOL_DOL
#define VIED_NCI_DEV_CHN_DMA_ISA_DOL_OFFSET						(1)
#endif
#define VIED_NCI_DEV_CHN_DMA_ISA_PAF_OFFSET			(1)
#define VIED_NCI_DEV_CHN_DMA_EXT0_OFFSET						IA_CSS_DMA_RESOURCES_DMA_LB_CHN_OFFSET_ISL
#define VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_OFFSET					IA_CSS_DMA_RESOURCES_DMA_EXT1_CHN_WRITE_OFFSET_PSA
#define VIED_NCI_DEV_CHN_DMA_EXT1_READ_OFFSET					IA_CSS_DMA_RESOURCES_DMA_EXT1_CHN_READ_OFFSET_ISL
#define VIED_NCI_TRANSFER_VMEM0_TYPE_OFFSET						(0)
#define VIED_NCI_TRANSFER_VMEM1_TYPE_OFFSET						(0)

#if HAS_FF_DOL_DOL
#define VIED_NCI_DEV_CHN_DMA_EXT1_READ_DOL_INPUT_HIGH_OFFSET	(VIED_NCI_DEV_CHN_DMA_EXT1_READ_OFFSET + 1)
#define VIED_NCI_DEV_CHN_DMA_EXT1_READ_DOL_INPUT_SHORT_OFFSET	(VIED_NCI_DEV_CHN_DMA_EXT1_READ_DOL_INPUT_HIGH_OFFSET + 1)
#define VIED_NCI_DEV_CHN_DMA_EXT1_READ_DOL_INPUT_MEDIUM_OFFSET	(VIED_NCI_DEV_CHN_DMA_EXT1_READ_DOL_INPUT_SHORT_OFFSET + 1)
#define VIED_NCI_DEV_CHN_DMA_EXT1_PAF_READ_OFFSET		(VIED_NCI_DEV_CHN_DMA_EXT1_READ_DOL_INPUT_MEDIUM_OFFSET + 1)
#else
#define VIED_NCI_DEV_CHN_DMA_EXT1_PAF_READ_OFFSET		(VIED_NCI_DEV_CHN_DMA_EXT1_READ_OFFSET + 1)
#endif

#define DMA_IN_BAYER_DMA_DEV_CHN_ID								(VIED_NCI_DEV_CHN_DMA_EXT1_READ_ID)
#define DMA_IN_BAYER_DMA_RESOURCE_ID							vied_nci_dev_chn_dma_ext1_read
#define DMA_IN_ISLDMA_DEV_CHN_ID								(VIED_NCI_DEV_CHN_DMA_ISA_ID)
#define DMA_IN_ISLDMA_RESOURCE_ID								vied_nci_dev_chn_dma_isa
#define DMA_OUT_PSA_S2V_DMA_DEV_CHN_ID							(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID)
#define DMA_OUT_PSA_S2V_DMA_RESOURCE_ID							vied_nci_dev_chn_dma_ext1_write
#define DMA_OUT_STILL_DMA_DEV_CHN_ID							(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID)
#define DMA_OUT_STILL_DMA_RESOURCE_ID							vied_nci_dev_chn_dma_ext1_write
/*
 * SCALED A output pin is disabled in ISA+PSA PG, still keep the macros for scaled a in case we need
 * to enable this output pin in the future.
 */
#define DMA_OUT_VIDEO_SCALED_A_DMA_DEV_CHN_ID					(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID)
#define DMA_OUT_VIDEO_SCALED_A_DMA_RESOURCE_ID					vied_nci_dev_chn_dma_ext1_write
#if HAS_FF_R2I_DS_B
#define DMA_OUT_VIDEO_SCALED_B_DMA_DEV_CHN_ID					(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID)
#define DMA_OUT_VIDEO_SCALED_B_DMA_RESOURCE_ID					vied_nci_dev_chn_dma_ext1_write
#endif
#define DMA_OUT_VIDEO_FULL_DMA_DEV_CHN_ID						(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID)
#define DMA_OUT_VIDEO_FULL_DMA_RESOURCE_ID						vied_nci_dev_chn_dma_ext1_write
#define DMA_OUT_SIS_DMA_DEV_CHN_ID								(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID)
#define DMA_OUT_SIS_DMA_RESOURCE_ID								vied_nci_dev_chn_dma_ext1_write
#define DMA_EXT0_AWB_DMA_DEV_CHN_ID								(VIED_NCI_DEV_CHN_DMA_EXT0_ID)
#define DMA_EXT0_AWB_DMA_RESOURCE_ID							vied_nci_dev_chn_dma_ext0
#define DMA_EXT0_AF_DMA_DEV_CHN_ID								(VIED_NCI_DEV_CHN_DMA_EXT0_ID)
#define DMA_EXT0_AF_DMA_RESOURCE_ID								vied_nci_dev_chn_dma_ext0
#define DMA_EXT0_LSC_DMA_DEV_CHN_ID								(VIED_NCI_DEV_CHN_DMA_EXT0_ID)
#define DMA_EXT0_LSC_DMA_RESOURCE_ID							vied_nci_dev_chn_dma_ext0
#define DMA_EXT0_PAF_DMA_DEV_CHN_ID 							(VIED_NCI_DEV_CHN_DMA_EXT0_ID)
#define DMA_EXT0_PAF_DMA_RESOURCE_ID							vied_nci_dev_chn_dma_ext0

#define DMA_IN_BAYER_DMA_RESOURCE_OFFSET						(VIED_NCI_DEV_CHN_DMA_EXT1_READ_OFFSET)
#define DMA_IN_ISLDMA_RESOURCE_OFFSET							(VIED_NCI_DEV_CHN_DMA_ISA_OFFSET)
#define DMA_OUT_PSA_S2V_DMA_Y_WRITE_OFFSET						(VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_OFFSET)
#define DMA_OUT_PSA_S2V_DMA_U_WRITE_OFFSET						(DMA_OUT_PSA_S2V_DMA_Y_WRITE_OFFSET + DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_PSA_S2V_DMA_V_WRITE_OFFSET						(DMA_OUT_PSA_S2V_DMA_U_WRITE_OFFSET + DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_PSA_S2V_DMA_WRITE_SIZE							(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS)
#define DMA_OUT_PSA_S2V_DMA_RESOURCE_OFFSET						(DMA_OUT_PSA_S2V_DMA_Y_WRITE_OFFSET)

#define DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING   (1)

#define DMA_OUT_Y_SIZE            (DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_U_SIZE            (DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_V_SIZE            (DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)

#define DMA_OUT_Y_RESOURCE_OFFSET VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_OFFSET
#define DMA_OUT_U_RESOURCE_OFFSET (DMA_OUT_Y_RESOURCE_OFFSET + DMA_OUT_Y_SIZE)
#define DMA_OUT_V_RESOURCE_OFFSET (DMA_OUT_U_RESOURCE_OFFSET + DMA_OUT_U_SIZE)

#define DMA_OUT_RESOURCE_ID		VIED_NCI_DEV_CHN_DMA_EXT1_WRITE_ID
#define DMA_OUT_SIZE            (DMA_OUT_Y_SIZE + DMA_OUT_U_SIZE + DMA_OUT_V_SIZE)
#define DMA_OUT_RESOURCE_OFFSET DMA_OUT_Y_RESOURCE_OFFSET

#define DMA_OUT_DUMMY_TOP_Y_RESOURCE_OFFSET	(DMA_OUT_V_RESOURCE_OFFSET + DMA_OUT_V_SIZE)
#define DMA_OUT_DUMMY_TOP_Y_SIZE			(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING)
#define DMA_OUT_DUMMY_TOP_U_RESOURCE_OFFSET	(DMA_OUT_DUMMY_TOP_Y_RESOURCE_OFFSET + DMA_OUT_DUMMY_TOP_Y_SIZE)
#define DMA_OUT_DUMMY_TOP_U_SIZE			(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING)
#define DMA_OUT_DUMMY_TOP_V_RESOURCE_OFFSET	(DMA_OUT_DUMMY_TOP_U_RESOURCE_OFFSET + DMA_OUT_DUMMY_TOP_U_SIZE)
#define DMA_OUT_DUMMY_TOP_V_SIZE			(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING)

#define DMA_OUT_DUMMY_TOP_RESOURCE_OFFSET	DMA_OUT_DUMMY_TOP_Y_RESOURCE_OFFSET
#define DMA_OUT_DUMMY_TOP_SIZE  			(DMA_OUT_DUMMY_TOP_Y_SIZE + DMA_OUT_DUMMY_TOP_U_SIZE + DMA_OUT_DUMMY_TOP_V_SIZE)

#define DMA_OUT_DUMMY_BOTTOM_Y_RESOURCE_OFFSET	(DMA_OUT_DUMMY_TOP_V_RESOURCE_OFFSET + DMA_OUT_DUMMY_TOP_V_SIZE)
#define DMA_OUT_DUMMY_BOTTOM_Y_SIZE			(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING)
#define DMA_OUT_DUMMY_BOTTOM_U_RESOURCE_OFFSET	(DMA_OUT_DUMMY_BOTTOM_Y_RESOURCE_OFFSET + DMA_OUT_DUMMY_BOTTOM_Y_SIZE)
#define DMA_OUT_DUMMY_BOTTOM_U_SIZE			(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING)
#define DMA_OUT_DUMMY_BOTTOM_V_RESOURCE_OFFSET	(DMA_OUT_DUMMY_BOTTOM_U_RESOURCE_OFFSET + DMA_OUT_DUMMY_BOTTOM_U_SIZE)
#define DMA_OUT_DUMMY_BOTTOM_V_SIZE			(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE_FOR_VERTICAL_PADDING)

#define DMA_OUT_DUMMY_BOTTOM_RESOURCE_OFFSET	DMA_OUT_DUMMY_BOTTOM_Y_RESOURCE_OFFSET

#define DMA_OUT_DUMMY_BOTTOM_SIZE  			(DMA_OUT_DUMMY_BOTTOM_Y_SIZE + DMA_OUT_DUMMY_BOTTOM_U_SIZE + DMA_OUT_DUMMY_BOTTOM_V_SIZE)

/* Vertical padding DMA channels size is 9 instead of 3 (3 for Image and another 6 for padding) */
#define DMA_OUT_S2V_VERTICAL_PADDING_SIZE	(DMA_OUT_SIZE + DMA_OUT_DUMMY_TOP_SIZE + DMA_OUT_DUMMY_BOTTOM_SIZE)

#define DMA_OUT_STILL_DMA_WRITE_OFFSET							(IA_CSS_DMA_RESOURCES_DMA_EXT1_CHN_WRITE_OFFSET_ISL)
#define DMA_OUT_STILL_DMA_WRITE_SIZE							(DMA_OUT_STILL_ORIG_RES_NUM_PLANES * DMA_OUT_STILL_ORIG_RES_NOF_CHANS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_OFFSET				(DMA_OUT_STILL_DMA_WRITE_OFFSET + DMA_OUT_STILL_DMA_WRITE_SIZE)
/*
 * SCALED A output pin is disabled in ISA+PSA PG, still keep the macros for scaled a in case we need
 * to enable this output pin in the future.
 */
#define DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_OFFSET				(DMA_OUT_STILL_DMA_WRITE_OFFSET + DMA_OUT_STILL_DMA_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_SIZE					(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_U_WRITE_OFFSET				(DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_OFFSET + DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_U_WRITE_SIZE					(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_V_WRITE_OFFSET				(DMA_OUT_VIDEO_SCALED_A_DMA_U_WRITE_OFFSET + DMA_OUT_VIDEO_SCALED_A_DMA_U_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_V_WRITE_SIZE					(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_WRITE_SIZE					(DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_SIZE + DMA_OUT_VIDEO_SCALED_A_DMA_U_WRITE_SIZE + DMA_OUT_VIDEO_SCALED_A_DMA_V_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_A_DMA_RESOURCE_OFFSET				(DMA_OUT_VIDEO_SCALED_A_DMA_Y_WRITE_OFFSET)
#if HAS_FF_R2I_DS_B
#define DMA_OUT_VIDEO_SCALED_B_DMA_Y_WRITE_OFFSET				(DMA_OUT_STILL_DMA_WRITE_OFFSET + DMA_OUT_STILL_DMA_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_B_DMA_Y_WRITE_SIZE					(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_B_DMA_U_WRITE_OFFSET				(DMA_OUT_VIDEO_SCALED_B_DMA_Y_WRITE_OFFSET + DMA_OUT_VIDEO_SCALED_B_DMA_Y_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_B_DMA_U_WRITE_SIZE					(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_B_DMA_V_WRITE_OFFSET				(DMA_OUT_VIDEO_SCALED_B_DMA_U_WRITE_OFFSET + DMA_OUT_VIDEO_SCALED_B_DMA_U_WRITE_SIZE)
#define DMA_OUT_VIDEO_SCALED_B_DMA_V_WRITE_SIZE					(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_SCALED_B_DMA_RESOURCE_OFFSET				(DMA_OUT_VIDEO_SCALED_B_DMA_Y_WRITE_OFFSET)
#define DMA_OUT_VIDEO_SCALED_B_DMA_WRITE_SIZE					(DMA_OUT_VIDEO_SCALED_B_DMA_Y_WRITE_SIZE + DMA_OUT_VIDEO_SCALED_B_DMA_U_WRITE_SIZE + DMA_OUT_VIDEO_SCALED_B_DMA_V_WRITE_SIZE)
#define DMA_OUT_SIS_A_DMA_WRITE_OFFSET							(DMA_OUT_VIDEO_SCALED_B_DMA_RESOURCE_OFFSET + DMA_OUT_VIDEO_SCALED_B_DMA_WRITE_SIZE)
#else
#define DMA_OUT_SIS_A_DMA_WRITE_OFFSET							(DMA_OUT_VIDEO_SCALED_A_DMA_RESOURCE_OFFSET + DMA_OUT_VIDEO_SCALED_A_DMA_WRITE_SIZE)
#endif
#define DMA_OUT_SIS_A_DMA_WRITE_SIZE							(1)
#define DMA_OUT_SIS_B_DMA_WRITE_OFFSET							(DMA_OUT_SIS_A_DMA_WRITE_OFFSET + DMA_OUT_SIS_A_DMA_WRITE_SIZE)
#define DMA_OUT_SIS_B_DMA_WRITE_SIZE							(DMA_OUT_SIS_A_DMA_WRITE_SIZE)
#define DMA_OUT_VIDEO_FULL_DMA_Y_WRITE_OFFSET					(DMA_OUT_SIS_B_DMA_WRITE_OFFSET + DMA_OUT_SIS_B_DMA_WRITE_SIZE)
#define DMA_OUT_VIDEO_FULL_DMA_Y_WRITE_SIZE						(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_FULL_DMA_U_WRITE_OFFSET					(DMA_OUT_VIDEO_FULL_DMA_Y_WRITE_OFFSET + DMA_OUT_VIDEO_FULL_DMA_Y_WRITE_SIZE)
#define DMA_OUT_VIDEO_FULL_DMA_U_WRITE_SIZE						(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_FULL_DMA_V_WRITE_OFFSET					(DMA_OUT_VIDEO_FULL_DMA_U_WRITE_OFFSET + DMA_OUT_VIDEO_FULL_DMA_U_WRITE_SIZE)
#define DMA_OUT_VIDEO_FULL_DMA_V_WRITE_SIZE						(DMA_NCI_YUV_TRANSFER_NUM_DMA_CHANNELS_PER_PLANE)
#define DMA_OUT_VIDEO_FULL_DMA_RESOURCE_OFFSET					(DMA_OUT_VIDEO_FULL_DMA_Y_WRITE_OFFSET)
#define DMA_OUT_VIDEO_FULL_DMA_WRITE_SIZE						(DMA_OUT_VIDEO_FULL_DMA_Y_WRITE_SIZE + DMA_OUT_VIDEO_FULL_DMA_U_WRITE_SIZE + DMA_OUT_VIDEO_FULL_DMA_V_WRITE_SIZE)
#define DMA_OUT_IR_DMA_WRITE_OFFSET				(DMA_OUT_VIDEO_FULL_DMA_RESOURCE_OFFSET + DMA_OUT_VIDEO_FULL_DMA_WRITE_SIZE)
#define DMA_OUT_IR_DMA_WRITE_SIZE								(DMA_OUT_IR_DMA_NOF_CHANS)


#define DMA_BAYER_IN_RESOURCE_ID		(VIED_NCI_DEV_CHN_DMA_EXT1_READ_ID)
#define DMA_PAF_IN_RESOURCE_ID			(VIED_NCI_DEV_CHN_DMA_EXT1_READ_ID)

#define DMA_EXT0_AWB_DMA_OFFSET									(VIED_NCI_DEV_CHN_DMA_EXT0_OFFSET)
#define DMA_EXT0_AF_DMA_OFFSET									(DMA_EXT0_AWB_DMA_OFFSET + AWB_DMA_SIZE)
#define DMA_EXT0_LSC_DMA_OFFSET									(DMA_EXT0_AF_DMA_OFFSET + AF_DMA_SIZE)
#define DMA_EXT0_PAF_DMA_OFFSET									(DMA_EXT0_LSC_DMA_OFFSET + LSC_DMA_SIZE)

#define INPUT_BLOCK_WIDTH	(2048)
#define IPFD_PAF_NUMBUF		(3)

/* Warning - Fwapi testbench host code currently does not support MMU configuration,
hence using dma-ext1 results in data corruption on target testing with
fwapi testbench host code(works fine in sched) . DMA - ext1 works fine on driver
testing. On target we have to manually switch back to  dma-ext0 if using
fwapi testbench*/

/*enable/disable dma_ext1_read for isl bayer input DMA channel*/
#define DMA_NCI_YUV_OUTPUT_TRANSFER_DMA_RESOURCE_ID 			vied_nci_dev_chn_dma_ext1_write
/*
 * TODO: once it has become possible to make non-relocatable resources explicit in .pipe files, unify the offset
 * definition below. Currently, this must be hardcoded to match the program order.
 */

/* Defines for output buffers - TRANSFER VMEM */
/* Bayer full resolution */
#define OUTPUT_STILL_ORIG_RES_BUF_MEM_TYPE  	VMEM_SECTION_ISA2PSA_ISA_OUTPUT1_MEM_ID
#define OUTPUT_STILL_ORIG_RES_BUF_START_ADDR	(VMEM_SECTION_ISA2PSA_ISA_OUTPUT1_OFFSET * VECTOR_SIZE_IN_BYTES)

/* Video Full YUV Planar at ISA - same as ISA BAYER orig definitions */
#define VIDEO_FULL_Q_OUT_BUF_MEM				OUTPUT_STILL_ORIG_RES_BUF_MEM_TYPE
#define VIDEO_FULL_Q_OUT_BUF_START_ADDR 		OUTPUT_STILL_ORIG_RES_BUF_START_ADDR /* bayer still and YUV full resolutions are mutex */

/* defines for SIS bayer output kernel */
#define OUTPUT_SIS_BUF_MEM										VMEM_SECTION_ISA2PSA_ISA_OUTPUT_MEM_ID
#define OUTPUT_SIS_BUF_START_ADDR								(VMEM_SECTION_ISA2PSA_ISA_OUTPUT_OFFSET * VECTOR_SIZE_IN_BYTES)
#define OUTPUT_SIS_B_BUF_START_ADDR 							(OUTPUT_SIS_BUF_START_ADDR + OUTPUT_SIS_BUF_MEM_SIZE)

/* IR/MD output */
#define IR_MD_Q_OUT_BUF_MEM_TYPE								VMEM_SECTION_ISA2PSA_ISA_OUTPUT_MEM_ID
#define IR_MD_Q_OUT_BUF_START_ADDR  							(OUTPUT_SIS_B_BUF_START_ADDR + OUTPUT_SIS_BUF_MEM_SIZE)

#if HAS_FF_R2I_DS_B
/* Scaled B YUV Planar */
#define SCALED_B_Q_OUT_BUF_MEM									VMEM_SECTION_ISA2PSA_ISA_OUTPUT_MEM_ID
#define SCALED_B_Q_OUT_BUF_START_ADDR							(IR_MD_Q_OUT_BUF_START_ADDR + OUTPUT_IR_BUF_MEM_SIZE)
#endif

/*
 * scaled A is not required for ISA2PSA - kept at the moment.
 * it can't be enabled in tests because has has dummy offsets
 */
/* Scaled A YUV Planar */
#define SCALED_A_Q_OUT_BUF_MEM									(buf_mem_transfer_vmem0)
#define SCALED_A_Q_OUT_BUF_START_ADDR							(Q_OUT_BUF_START_ADDR + Q_OUT_MEM_SIZE)

#define SCALED_A_Q_ISA2PSA_BUF_MEM								(VMEM_SECTION_ISA2PSA_MEM_ID)
#define SCALED_A_Q_ISA2PSA_BUF_START_ADDR						(VMEM_SECTION_ISA2PSA_OFFSET)
#define SCALED_A_Q_ISA2PSA_MEM_TOTAL_SIZE						(VMEM_SECTION_ISA2PSA_SIZE)

/* YUV Planar at output of PSA*/
#define Q_OUT_BUF_MEM											VMEM_SECTION_LBPS_OUTPUT_MEM_ID
#define Q_OUT_BUF_START_ADDR									(VMEM_SECTION_LBPS_OUTPUT_OFFSET * VECTOR_SIZE_IN_BYTES)
#define Q_OUT_NUMBUF											(3)
#define Q_OUT_LINE_WIDTH										(2048 * BYTES_PER_ELEMENT)
#define Q_OUT_BLK_WIDTH 										(Q_OUT_LINE_WIDTH / VECTOR_SIZE_IN_BYTES)
#define Q_OUT_BLK_HEIGHT										(2)
#define Q_OUT_WIDTH_Y											Q_OUT_BLK_WIDTH
#define Q_OUT_HEIGHT_Y											Q_OUT_BLK_HEIGHT
#define Q_OUT_SIZE_Y											(Q_OUT_WIDTH_Y * Q_OUT_HEIGHT_Y)
#define Q_OUT_WIDTH_U											(Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define Q_OUT_HEIGHT_U											(Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define Q_OUT_SIZE_U											(Q_OUT_WIDTH_U * Q_OUT_HEIGHT_U)
#define Q_OUT_WIDTH_V											(Q_OUT_WIDTH_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define Q_OUT_HEIGHT_V											(Q_OUT_HEIGHT_Y >> CHROMA_SUBSAMPLE_SHIFT)
#define Q_OUT_SIZE_V											(Q_OUT_WIDTH_V * Q_OUT_HEIGHT_V)
#define Q_OUT_SIZE												(Q_OUT_SIZE_Y + Q_OUT_SIZE_U + Q_OUT_SIZE_V)
#define Q_OUT_MEM_SIZE											(Q_OUT_SIZE * Q_OUT_NUMBUF * VECTOR_SIZE_IN_BYTES)

#endif /* __PROGRAM_SHARED_H */
